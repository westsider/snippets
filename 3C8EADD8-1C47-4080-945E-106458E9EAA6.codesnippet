<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>parseWeather</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>TopLevel</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>import UIKit
import PlaygroundSupport
PlaygroundPage.current.needsIndefiniteExecution = true

let url = NSURL(string:"https://api.wunderground.com/api/f6373e95fa296c84/conditions/q/CA/San_Francisco.json")

func taskForGetWeather(url: NSURL?) {
    
    let task = URLSession.shared.dataTask(with: url! as URL) {(data, response, error) in
        
        parseWeather(data: data)
        
    }
    task.resume()
}

func parseWeather(data: Data?) {
    
    var city = ""
    var temp = 0.0
    var weather = ""
    
    if let urlContent = data {
        
        do {
            let jsonResult = try JSONSerialization.jsonObject(with: urlContent, options: JSONSerialization.ReadingOptions.mutableContainers) as AnyObject
            //print("jsonResult:  \(jsonResult)")
            
            if let current = jsonResult["current_observation"] as? NSDictionary {
                //print("Current: \(current)")
                if let display_location = current["display_location"] as? NSDictionary  {
                    //print("display_location: \(display_location)")
                    if let fullCity = display_location["full"]{
                        //print("fullCity: \(fullCity)")
                        city = fullCity as! String
                    }
                    if let temps = current["temp_f"]  {
                        //print("temp: \(temps)")
                        temp = temps as! Double
                    }
                    if let weathers = current["weather"]  {
                        //print("weather: \(weathers)")
                        weather = weathers as! String
                        
                    }
                    DispatchQueue.main.async(execute: {
                        print( "\nWeather Report for \(city) \(temp)Â° and \(weather)")
                    })
                }
            }
        } catch {
            
            print("JSON serialization failed")
            
        }
    }
}

taskForGetWeather(url: url)
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>3C8EADD8-1C47-4080-945E-106458E9EAA6</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string>get and parrse weather from url</string>
	<key>IDECodeSnippetTitle</key>
	<string>Parse Weather</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>0</integer>
</dict>
</plist>
